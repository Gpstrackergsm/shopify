{%- liquid
  assign context_product = product

  assign offer_popularity = context_product.metafields.custom.popularity_message
  if offer_popularity == blank
    assign offer_popularity = 'In 20+ carts'
  endif

  assign primary_variant = context_product.selected_or_first_available_variant
  assign current_price = primary_variant.price | default: context_product.price
  assign formatted_price = current_price | money

  assign compare_price_candidate = primary_variant.compare_at_price
  if compare_price_candidate == blank or compare_price_candidate <= current_price
    assign compare_price_candidate = context_product.compare_at_price_max
  endif

  assign formatted_compare_price = ''
  assign discount_percentage = ''
  if compare_price_candidate != blank and compare_price_candidate > current_price
    assign formatted_compare_price = compare_price_candidate | money
    assign discount_ratio = compare_price_candidate | minus: current_price | times: 100.0 | divided_by: compare_price_candidate
    assign discount_percentage = discount_ratio | round
  endif

  assign badge_text = context_product.metafields.custom.intro_badge
  if badge_text == blank
    assign badge_text = 'Introductory price'
  endif

  assign sale_prefix = context_product.metafields.custom.sale_prefix
  if sale_prefix == blank
    if discount_percentage != ''
      assign sale_prefix = discount_percentage | append: '% off'
    else
      assign sale_prefix = '70% off'
    endif
  endif

  assign sale_timer = context_product.metafields.custom.sale_timer
  if sale_timer == blank
    assign sale_timer = 'Sale ends in 19:59:12'
  endif

  assign checkout_disabled = true
  if context_product.available and primary_variant
    assign checkout_disabled = false
  endif
-%}
<div class="buy-now-card" role="region" aria-label="Checkout offer">
  <p class="buy-now-card__status">{{ offer_popularity }}</p>
  <p class="buy-now-card__price">Now <span>{{ formatted_price }}</span></p>
  {%- if formatted_compare_price != blank -%}
    <p class="buy-now-card__price--original">{{ formatted_compare_price }}</p>
  {%- endif -%}
  <span class="buy-now-card__badge">{{ badge_text }}</span>
  <p class="buy-now-card__sale-info">
    <span class="buy-now-card__sale-highlight">{{ sale_prefix }}</span>
    {%- if sale_timer != blank -%}
      <span aria-hidden="true">&nbsp;&middot;&nbsp;</span>
      <span class="buy-now-card__sale-timer">{{ sale_timer }}</span>
    {%- endif -%}
  </p>
  {%- if checkout_disabled -%}
    <span class="buy-now-card__button buy-now-card__button--disabled" role="button" aria-disabled="true">Sold out</span>
  {%- else -%}
    <form method="post" action="{{ routes.cart_add_url }}" class="buy-now-card__form">
      <input type="hidden" name="id" value="{{ primary_variant.id }}">
      <input type="hidden" name="quantity" value="1">
      <input type="hidden" name="return_to" value="/checkout">
      <button type="submit" class="buy-now-card__button">Buy Now</button>
    </form>
  {%- endif -%}
</div>

<style>
  .buy-now-card {
    max-width: 24rem;
    width: min(100%, 24rem);
    margin: 0 auto;
    padding: 1.75rem 1.5rem;
    background-color: #fff;
    border-radius: 1.5rem;
    box-shadow: 0 12px 32px rgba(15, 23, 42, 0.12);
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: 0.9rem;
    font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
  }

  .buy-now-card__status {
    font-size: 0.85rem;
    letter-spacing: 0.02em;
    text-transform: uppercase;
    color: #6b7280;
    margin: 0;
  }

  .buy-now-card__price {
    font-size: clamp(2.25rem, 5vw, 2.65rem);
    font-weight: 700;
    color: #111827;
    margin: 0;
    line-height: 1.1;
  }

  .buy-now-card__price span {
    white-space: nowrap;
  }

  .buy-now-card__price--original {
    font-size: 1rem;
    color: #9ca3af;
    text-decoration: line-through;
    margin: -0.5rem 0 0;
  }

  .buy-now-card__badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.35rem 0.85rem;
    background: linear-gradient(135deg, #d1fae5, #bbf7d0);
    color: #047857;
    font-size: 0.825rem;
    font-weight: 600;
    border-radius: 9999px;
  }

  .buy-now-card__sale-info {
    font-size: 0.95rem;
    color: #065f46;
    font-weight: 600;
    margin: 0.1rem 0 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.35rem;
    flex-wrap: wrap;
  }

  .buy-now-card__sale-highlight {
    color: #047857;
  }

  .buy-now-card__sale-timer {
    font-variant-numeric: tabular-nums;
  }

  .buy-now-card__form {
    width: 100%;
  }

  .buy-now-card__button {
    width: 100%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background-color: #059669;
    color: #fff;
    font-size: 1.05rem;
    font-weight: 600;
    padding: 0.95rem 1.25rem;
    border-radius: 9999px;
    text-decoration: none;
    box-shadow: 0 14px 30px rgba(5, 150, 105, 0.25);
    border: none;
    cursor: pointer;
    transition: background-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
  }

  .buy-now-card__button:hover {
    background-color: #047857;
    box-shadow: 0 16px 32px rgba(4, 120, 87, 0.35);
    transform: translateY(-1px);
  }

  .buy-now-card__button:active {
    transform: translateY(0);
  }

  .buy-now-card__button--disabled {
    cursor: not-allowed;
    background-color: #d1d5db;
    color: #6b7280;
    box-shadow: none;
  }

  @media (max-width: 480px) {
    .buy-now-card {
      margin: 1.5rem auto;
      padding: 1.5rem 1.25rem;
    }

    .buy-now-card__sale-info {
      font-size: 0.9rem;
    }

    .buy-now-card__button {
      font-size: 1rem;
      padding: 0.85rem 1rem;
    }
  }
</style>

<script>
  (function () {
    if (typeof fetch !== 'function' || typeof URLSearchParams === 'undefined') {
      return;
    }

    var checkoutUrl = '{{ routes.checkout_url }}';
    var fallbackCartUrl = '{{ routes.cart_url }}';
    var clearCartUrl = '{{ routes.cart_clear_url }}.js';

    var bindBuyNowForm = function (form) {
      if (!form || form.dataset.buyNowBound === 'true') {
        return;
      }

      form.dataset.buyNowBound = 'true';

      form.addEventListener('submit', function (event) {
        event.preventDefault();

        var submitButton = form.querySelector('button[type="submit"]');
        if (submitButton) {
          submitButton.disabled = true;
          submitButton.classList.add('buy-now-card__button--disabled');
        }

        var restoreButtonState = function () {
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.classList.remove('buy-now-card__button--disabled');
          }
        };

        fetch(clearCartUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        })
          .catch(function () {
            // Swallow clear cart errors so we can still attempt to add the item.
          })
          .then(function () {
            var formData = new FormData(form);
            var params = new URLSearchParams();

            formData.forEach(function (value, key) {
              if (key !== 'return_to') {
                params.append(key, value);
              }
            });

            return fetch(form.action + '.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                'Accept': 'application/json'
              },
              body: params.toString()
            });
          })
          .then(function (response) {
            if (!response || !response.ok) {
              throw new Error('Failed to add item to cart');
            }

            window.location.href = checkoutUrl;
          })
          .catch(function () {
            restoreButtonState();
            window.location.href = fallbackCartUrl;
          });
      });
    };

    var initializeBuyNowForms = function (root) {
      var scope = root || document;
      var forms = scope.querySelectorAll('.buy-now-card__form');
      if (!forms.length) {
        return;
      }

      forms.forEach(bindBuyNowForm);
    };

    var onReady = function (callback) {
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', callback);
      } else {
        callback();
      }
    };

    onReady(function () {
      initializeBuyNowForms(document);
    });

    document.addEventListener('shopify:section:load', function (event) {
      initializeBuyNowForms(event.target);
    });
  })();
</script>
